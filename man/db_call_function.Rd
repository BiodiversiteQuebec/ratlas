% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/db_call_function.R
\name{db_call_function}
\alias{db_call_function}
\title{Generic function to access data from functions in Atlas database}
\usage{
db_call_function(
  name,
  schema = "public",
  output_geometry = FALSE,
  output_flatten = TRUE,
  .token = NULL,
  ...
)
}
\arguments{
\item{name}{\code{character}. Name of the atlas function to be accessed.
data. Can be either \code{api}, \code{public} or \code{atlas_api}.}

\item{schema}{Optional. \code{character} Schema from the database where is located
the data. Can be either \code{api}, \code{public} or \code{atlas_api}.}

\item{output_geometry}{Optional. \code{logical} default \code{FALSE}. If \code{TRUE},
returns an \code{sf} object using the \code{geometry} column from the function output.}

\item{output_flatten}{Optional. \code{logical} default \code{FALSE}. If \code{TRUE},
returns a \code{data.frame} object with nested objects flattened.}

\item{.token}{Optional. \code{character} Bearer token providing access to the web
api.}

\item{...}{\code{character} or \code{numeric} scalar or vector. Arguments to be passed
to the function.}
}
\value{
\code{tibble} with rows associated with Atlas data object
}
\description{
Return data objects stored obtained through endpoints corresponding to the
name of the database function.
}
\details{
This function is designed to interface with a web API deployed with PostgREST
}
